{"version":3,"sources":["components/CharacterList.js","components/Pagination.js","App.js","index.js"],"names":["urlEndpointRandom","CharacterList","characters","useState","gifUrl","setGifUrl","isShown","setIsShown","loading","setLoading","counterClick","setCounterClick","selectedCharacter","setSelectedCharacter","show","setShow","handleShowModal","useEffect","fetchGifRandom","name","fetch","res","json","data","images","original","url","className","Modal","onHide","role","src","alt","onClick","Footer","Button","variant","map","character","style","minWidth","image","status","species","charAt","toUpperCase","slice","origin","gender","location","id","Pagination","info","page","handleNextPage","handlePreviousPage","prev","next","App","setCharacters","setInfo","setPage","query","setQuery","error","setError","fetchCharacters","axios","get","then","results","catch","console","window","scrollTo","href","type","placeholder","value","onChange","event","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cd351d6.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nconst API_KEY = \"sXpGFDGZs0Dv1mmNFvYaGUvYwKX0PWIh\";\r\nconst urlEndpointRandom = `https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}&tag=`;\r\n// const urlEndpoint = \"https://api.giphy.com/v1/gifs/search?q=\"; /* PARA OBTENER SIEMPRE EL MISMO GIF */\r\n// const giphyApiKey = \"&api_key=sXpGFDGZs0Dv1mmNFvYaGUvYwKX0PWIh&limit=1\"; /* PARA OBTENER SIEMPRE EL MISMO GIF */\r\n\r\nconst CharacterList = ({ characters }) => {\r\n  const [gifUrl, setGifUrl] = useState(\"\");\r\n  const [isShown, setIsShown] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [counterClick, setCounterClick] = useState(0);\r\n  const [selectedCharacter, setSelectedCharacter] = useState({});\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleCloseModal = () => setShow(false);\r\n  const handleShowModal = () => setShow(true);\r\n\r\n  const handleClickCloseGif = () => {\r\n    setIsShown(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchGifRandom = async () => {\r\n      if (!selectedCharacter.name) return;\r\n      setLoading(true);\r\n      const res = await fetch(urlEndpointRandom + selectedCharacter.name);\r\n      const data = await res.json();\r\n      setGifUrl(data.data.images.original.url);\r\n      setLoading(false);\r\n      setIsShown(true);\r\n    };\r\n\r\n    fetchGifRandom();\r\n\r\n    /* PARA OBTENER SIEMPRE EL MISMO GIF */\r\n    /* const fetchSameGif = async () => {\r\n      if (!selectedCharacter.name) return;\r\n      setLoading(true);\r\n      const res = await fetch(urlEndpoint + selectedCharacter.name + giphyApiKey);\r\n      const data = await res.json();\r\n      data.data.forEach(element => {\r\n        setGifUrl(element.images.original.url);\r\n      });\r\n      setLoading(false);\r\n      setIsShown(true);\r\n    }; */\r\n\r\n    // fetchSameGif();\r\n  }, [counterClick, selectedCharacter]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"containerTitle\">\r\n          <h3>\r\n            Click on an image or character name to show a related gif from the\r\n            character selected â¬‡\r\n          </h3>\r\n        </div>\r\n          {selectedCharacter.name && isShown && (\r\n            <Modal show={show} onHide={handleCloseModal}>\r\n                  <h6>Click on the gif or anywhere outside to close</h6>\r\n                  {!loading ? (\r\n                    <img\r\n                      className=\"gif-img\"\r\n                      src={gifUrl}\r\n                      alt={selectedCharacter.name}\r\n                      onClick={handleClickCloseGif}\r\n                    />\r\n                  ) : (\r\n                      <div\r\n                        className=\"loader-container spinner-border text-primary\"\r\n                        role=\"status\"\r\n                      >\r\n                        <span className=\"sr-only\"></span>\r\n                      </div>\r\n                  )}\r\n              <Modal.Footer className=\"gif\">\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => {\r\n                    setCounterClick(counterClick + 1);\r\n                  }}\r\n                >\r\n                  Get another random gif!\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          )}\r\n        \r\n        <hr />\r\n        {characters.map((character) => (\r\n          <div key={character.id} className=\"col-lg-3 col-md-6 col-sm-12 mb-4\">\r\n            <div className=\"card roundedCard\" style={{ minWidth: \"200px\" }}>\r\n              <div className=\"img-container card-body\">\r\n                <img\r\n                  className=\"img-fluid character-img card-img-top roundedCard\"\r\n                  src={character.image}\r\n                  alt={character.name}\r\n                  onClick={() => {\r\n                    setSelectedCharacter(character);\r\n                    setCounterClick(counterClick + 1);\r\n                    handleShowModal();\r\n                  }}\r\n                />\r\n                <div className=\"overlay d-flex align-items-center justify-conten-center\"></div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <h4\r\n                  className=\"card-title card-name\"\r\n                  onClick={() => {\r\n                    setSelectedCharacter(character);\r\n                    setCounterClick(counterClick + 1);\r\n                    handleShowModal();\r\n                  }}\r\n                >\r\n                  {character.name}\r\n                </h4>\r\n                <div className=\"card-text\">\r\n                  {(() => {\r\n                    switch (character.status) {\r\n                      case \"Alive\":\r\n                        return (\r\n                          <div>\r\n                            ðŸŸ¢ {character.status} - {character.species}\r\n                          </div>\r\n                        );\r\n                      case \"Dead\":\r\n                        return (\r\n                          <div>\r\n                            ðŸ”´ {character.status} - {character.species}\r\n                          </div>\r\n                        );\r\n                      case \"unknown\":\r\n                        return (\r\n                          <div>\r\n                            ðŸ”˜{\" \"}\r\n                            {character.status.charAt(0).toUpperCase() +\r\n                              character.status.slice(1)}{\" \"}\r\n                            - {character.species}\r\n                          </div>\r\n                        );\r\n                      default:\r\n                        break;\r\n                    }\r\n                  })()}\r\n                </div>\r\n                <hr /> {/* LINEA */}\r\n                <div className=\"card-text\">\r\n                  <b>Origin: </b>\r\n                  {character.origin.name.charAt(0).toUpperCase() +\r\n                    character.origin.name.slice(1)}\r\n                </div>\r\n                <div className=\"card-text\">\r\n                  <b>Gender: </b>\r\n                  {character.gender}\r\n                </div>\r\n                <div className=\"card-text\">\r\n                  <b>Last known location: </b>\r\n                  {character.location.name}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({ info, page, handleNextPage, handlePreviousPage }) => {\r\n  return (\r\n    <div className=\"container py-5\">\r\n        <nav>\r\n          <ul className=\"pagination justify-content-center\">\r\n            {info.prev ? (\r\n              <li className=\"page-item\">\r\n                <button className=\"page-link\" onClick={handlePreviousPage}>\r\n                  Previous\r\n                </button>\r\n              </li>\r\n            ) : null}\r\n            <li className=\"page-link\"> | {page} | </li>\r\n            {info.next ? (\r\n              <li className=\"page-item\">\r\n                <button className=\"page-link\" onClick={handleNextPage}>\r\n                  Next\r\n                </button>\r\n              </li>\r\n            ) : null}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n// components\n// import Navbar from \"./components/Navbar\";\nimport CharacterList from \"./components/CharacterList\";\nimport Pagination from \"./components/Pagination\";\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [info, setInfo] = useState({});\n  const [page, setPage] = useState(1);\n  const [query, setQuery] = useState(\"\");\n  const [error, setError] = useState(false);\n  const url = \"https://rickandmortyapi.com/api/character\";\n\n  const fetchCharacters = (url) => {\n    if (query !== \"\") {\n      axios\n        .get(`https://rickandmortyapi.com/api/character/?name=${query}`)\n        .then((data) => {\n          setCharacters(data.data.results);\n          setError(false);\n        })\n        .catch((error) => {\n          console.error(error);\n          setError(true);\n        });\n    } else {\n      axios\n        .get(url)\n        .then((data) => {\n          setCharacters(data.data.results);\n          setInfo(data.data.info);\n          setError(false);\n        })\n        .catch((error) => {\n          console.error(error);\n          setError(true);\n        });\n    }\n  };\n\n  const handleNextPage = () => {\n    if (error) {\n      setPage(1);\n      setQuery(\"\");\n      setError(false);\n      fetchCharacters(info.next);\n    } else {\n      setPage(page + 1);\n      setError(false);\n      fetchCharacters(info.next);\n    }\n    window.scrollTo(0, 0); // Desplaza el visor a un conjunto especÃ­fico de coodenadas en el documento.\n  };\n\n  const handlePreviousPage = () => {\n    if (error) {\n      setPage(1);\n      setQuery(\"\");\n      setError(false);\n      fetchCharacters(info.prev);\n    } else {\n      setPage(page - 1);\n      setError(false);\n      fetchCharacters(info.prev);\n    }\n    window.scrollTo(0, 0); // Desplaza el visor a un conjunto especÃ­fico de coodenadas en el documento.\n  };\n\n  const handleCLickButtonUp = () => {\n    window.scrollTo(0, 0);\n  };\n\n  useEffect(() => {\n    fetchCharacters(url);\n  }, [query]);\n\n  return (\n    <>\n      {/* NAVBAR */}\n      {/* <Navbar brand=\"Rick and Morty App\" /> */}\n      <nav className=\"navbar navbar-light\">\n        <div className=\"container navbar-container\">\n          <div>\n            <a href=\"http://www.Story-Train.com\">\n              <img\n                className=\"navbar-img\"\n                src=\"https://www.pngkey.com/png/full/112-1128897_portal-gun-rick-and-morty-portal-gun-rick.png\"\n                alt=\"navbar-img\"\n              />\n            </a>\n            <a\n              className=\"navbar-brand text-uppercase navbar-title\"\n              href=\"https://paulacsk.github.io/RickAndMorty-api-giphy/\"\n            >\n              Rick and Morty API Giphy\n            </a>\n          </div>\n          <div className=\"flex\">\n            <input\n              className=\"bg-gray-50 border border-gray-300 text-sm w-full indent-2 p-2.5 outline-none focus:border-blue-500 focus:ring-2 rounded-tl rounded-bl\"\n              type=\"text\"\n              placeholder=\"Search character...\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n              }}\n            />\n          </div>\n        </div>\n      </nav>\n      {!query ? (\n        <Pagination\n          info={info}\n          page={page}\n          handleNextPage={handleNextPage}\n          handlePreviousPage={handlePreviousPage}\n        ></Pagination>\n      ) : (\n        <div className=\"containerButtonUpAndBack\">\n          <a href=\"https://paulacsk.github.io/RickAndMorty-api-giphy/\">\n            <img\n              className=\"backButton-img character-img\"\n              src=\"https://www.pngkey.com/png/full/112-1128897_portal-gun-rick-and-morty-portal-gun-rick.png\"\n              alt=\"portalGun-img\"\n            />\n          </a>\n          <p className=\"button-title\">Back to main page</p>\n        </div>\n      )}\n      {error ? (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"containerTitle\">\n              <h3>Aw geez... No character with that name, try another!</h3>\n            </div>\n            <img\n              className=\"imgNotFound\"\n              alt=\"Not found\"\n              src=\"https://i.pinimg.com/originals/46/82/88/46828885c28a6bfa34dd4d6bd9986c8d.png\"\n            ></img>\n          </div>\n        </div>\n      ) : (\n        <CharacterList characters={characters} />\n      )}\n\n      <div className=\"containerButtonUpAndBack\">\n        <img\n          className=\"imgButtonUp character-img\"\n          alt=\"img-Button-Up\"\n          src=\"https://images.fineartamerica.com/images/artworkimages/medium/3/2-rick-and-morty-diana-owen-transparent.png\"\n          onClick={handleCLickButtonUp}\n        ></img>\n        <p className=\"button-title\">Up Morty!</p>\n      </div>\n      {!query && (\n        <Pagination\n          info={info}\n          page={page}\n          handleNextPage={handleNextPage}\n          handlePreviousPage={handlePreviousPage}\n        ></Pagination>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}