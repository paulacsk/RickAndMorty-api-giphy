{"version":3,"sources":["components/Navbar.js","components/CharacterList.js","components/Pagination.js","App.js","index.js"],"names":["Navbar","brand","className","src","alt","href","urlEndpointRandom","CharacterList","characters","useState","gifUrl","setGifUrl","isShown","setIsShown","loading","setLoading","counterClick","setCounterClick","selectedCharacter","setSelectedCharacter","useEffect","fetchGifRandom","name","fetch","res","json","data","images","original","url","role","onClick","map","character","index","style","minWidth","image","status","species","charAt","toUpperCase","slice","origin","gender","location","id","Pagination","info","page","handleNextPage","handlePreviousPage","prev","next","App","setCharacters","setInfo","setPage","fetchCharacters","axios","get","then","results","catch","error","console","window","scrollTo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.733a3e41.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navbar = ({ brand }) => {\r\n  return (\r\n    <nav className=\"navbar-dark bg-dark\">\r\n      <div className=\"container navbar-container\">\r\n        <img className=\"navbar-img\" src=\"https://www.pngkey.com/png/full/112-1128897_portal-gun-rick-and-morty-portal-gun-rick.png\" alt=\"navbar-img\"/>\r\n        <a className=\"navbar-brand text-uppercase\" href=\"/\"> {brand} </a>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst API_KEY = \"sXpGFDGZs0Dv1mmNFvYaGUvYwKX0PWIh\";\r\nconst urlEndpointRandom = `https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}&tag=`;\r\n// const urlEndpoint = \"https://api.giphy.com/v1/gifs/search?q=\"; /* PARA OBTENER SIEMPRE EL MISMO GIF */\r\n// const giphyApiKey = \"&api_key=sXpGFDGZs0Dv1mmNFvYaGUvYwKX0PWIh&limit=1\"; /* PARA OBTENER SIEMPRE EL MISMO GIF */\r\n\r\nconst CharacterList = ({ characters }) => {\r\n  const [gifUrl, setGifUrl] = useState(\"\");\r\n  const [isShown, setIsShown] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [counterClick, setCounterClick] = useState(0);\r\n  const [selectedCharacter, setSelectedCharacter] = useState({});\r\n\r\n  const handleClickCloseGif = () => {\r\n    setIsShown(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchGifRandom = async () => {\r\n      if (!selectedCharacter.name) return;\r\n      setLoading(true);\r\n      const res = await fetch(urlEndpointRandom + selectedCharacter.name);\r\n      const data = await res.json();\r\n      setGifUrl(data.data.images.original.url);\r\n      setLoading(false);\r\n      setIsShown(true);\r\n    };\r\n\r\n    fetchGifRandom();\r\n\r\n    /* PARA OBTENER SIEMPRE EL MISMO GIF */\r\n    /* const fetchSameGif = async () => {\r\n      if (!selectedCharacter.name) return;\r\n      setLoading(true);\r\n      const res = await fetch(urlEndpoint + selectedCharacter.name + giphyApiKey);\r\n      const data = await res.json();\r\n      data.data.forEach(element => {\r\n        setGifUrl(element.images.original.url);\r\n      });\r\n      setLoading(false);\r\n      setIsShown(true);\r\n    }; */\r\n\r\n    // fetchSameGif();\r\n  }, [counterClick, selectedCharacter]);\r\n\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n      <div className=\"containerButtonUp\">\r\n        <h3>Click on an image or character name to show a related gif from the character selected â¬‡</h3>\r\n      </div>\r\n        {(selectedCharacter.name && isShown) && (\r\n            <div className=\"gif\">\r\n              <h5>Click gif image to close</h5>\r\n              <p>This is a random <b>{selectedCharacter.name}</b> related gif: </p>\r\n              {!loading\r\n                ? (<img className=\"gif-container\" src={gifUrl} alt={selectedCharacter.name} onClick={handleClickCloseGif}/>)\r\n                : (<div className=\"gif-container\">\r\n                    <div className=\"loader-container spinner-border text-primary\" role=\"status\">\r\n                      <span className=\"sr-only\"></span>\r\n                    </div>\r\n                  </div>)\r\n              }\r\n            </div>\r\n          )}\r\n        <hr /> \r\n        {characters.map((character, index) => (\r\n          <div key={character.id} className=\"col-lg-3 col-md-6 col-sm-12 mb-4\">\r\n            <div className=\"card\" style={{ minWidth: \"200px\" }}>\r\n              <div className=\"img-container card-body\">\r\n                <img \r\n                  className=\"img-fluid character-img card-img-top\" \r\n                  src={character.image} \r\n                  alt={character.name}\r\n                  // onClick={() => setSelectedCharacter(character)}\r\n                  onClick={() => {setSelectedCharacter(character); setCounterClick(counterClick + 1);}}\r\n                />\r\n                <div className=\"overlay d-flex align-items-center justify-conten-center\"></div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <h4 \r\n                  className=\"card-title card-name\"\r\n                  // onClick={() => setSelectedCharacter(character)}\r\n                  onClick={() => {setSelectedCharacter(character); setCounterClick(counterClick + 1);}}\r\n                >\r\n                  {character.name}\r\n                </h4>\r\n                <div className=\"card-text\"> \r\n                  {(() => {\r\n                    switch (character.status) {\r\n                      case 'Alive':\r\n                        return (\r\n                          <div>ðŸŸ¢ {character.status} - {character.species}</div>\r\n                        );\r\n                      case 'Dead':\r\n                        return (\r\n                          <div>ðŸ”´ {character.status} - {character.species}</div>\r\n                        );\r\n                      case 'unknown':\r\n                        return (\r\n                          <div>ðŸ”˜ {character.status.charAt(0).toUpperCase() + character.status.slice(1)} - {character.species}</div>\r\n                        );\r\n                      default:\r\n                        break;\r\n                    }\r\n                  })()}\r\n                </div>\r\n                <hr /> {/* LINEA */}\r\n                <div className=\"card-text\"><b>Origin: </b>{character.origin.name.charAt(0).toUpperCase() + character.origin.name.slice(1)}</div>\r\n                <div className=\"card-text\"><b>Gender: </b>{character.gender}</div>\r\n                <div className=\"card-text\"><b>Last known location: </b>{character.location.name}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({ info, page, handleNextPage, handlePreviousPage }) => {\r\n  return (\r\n    <div className=\"container py-5\">\r\n        <nav>\r\n          <ul className=\"pagination justify-content-center\">\r\n            {info.prev ? (\r\n              <li className=\"page-item\">\r\n                <button className=\"page-link\" onClick={handlePreviousPage}>\r\n                  Previous\r\n                </button>\r\n              </li>\r\n            ) : null}\r\n            <li className=\"page-link\"> | {page} | </li>\r\n            {info.next ? (\r\n              <li className=\"page-item\">\r\n                <button className=\"page-link\" onClick={handleNextPage}>\r\n                  Next\r\n                </button>\r\n              </li>\r\n            ) : null}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n// components\nimport Navbar from \"./components/Navbar\";\nimport CharacterList from \"./components/CharacterList\";\nimport Pagination from \"./components/Pagination\";\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [info, setInfo] = useState({});\n  const [page, setPage] = useState(1);\n  const url = \"https://rickandmortyapi.com/api/character\";\n\n  const fetchCharacters = (url) => {\n    axios\n      .get(url)\n      .then((data) => {\n        setCharacters(data.data.results);\n        setInfo(data.data.info);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  \n  const handleNextPage = () => {\n    setPage(page + 1);\n    fetchCharacters(info.next);\n    window.scrollTo(0, 0); // Desplaza el visor a un conjunto especÃ­fico de coodenadas en el documento.\n  };\n\n  const handlePreviousPage = () => {\n    setPage(page - 1);\n    fetchCharacters(info.prev);\n    window.scrollTo(0, 0); // Desplaza el visor a un conjunto especÃ­fico de coodenadas en el documento.\n  };\n  \n  const handleCLickButtonUp = () => {\n    window.scrollTo(0, 0);\n  };\n  \n  useEffect(() => {\n    fetchCharacters(url);\n  }, []);\n\n  return (\n    <>\n      <Navbar brand=\"Rick and Morty App\" />\n      <Pagination\n        info={info} \n        page={page} \n        handleNextPage={handleNextPage}\n        handlePreviousPage={handlePreviousPage}>\n      </Pagination>\n      <CharacterList characters={characters} />\n      <div className=\"containerButtonUp \">\n        <button className=\"page-link\" onClick={handleCLickButtonUp}> ðŸ‘† </button>\n      </div>\n      <Pagination \n        info={info} \n        page={page} \n        handleNextPage={handleNextPage}\n        handlePreviousPage={handlePreviousPage}>\n      </Pagination>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}