{"version":3,"sources":["components/CharacterList.js","components/Pagination.js","App.js","index.js"],"names":["urlEndpointRandom","CharacterList","characters","useState","gifUrl","setGifUrl","isShown","setIsShown","loading","setLoading","counterClick","setCounterClick","selectedCharacter","setSelectedCharacter","useEffect","fetchGifRandom","name","fetch","res","json","data","images","original","url","className","role","src","alt","onClick","map","character","style","minWidth","image","status","species","charAt","toUpperCase","slice","origin","gender","location","id","Pagination","info","page","handleNextPage","handlePreviousPage","prev","next","App","setCharacters","setInfo","setPage","query","setQuery","error","setError","fetchCharacters","axios","get","then","results","catch","console","window","scrollTo","href","type","placeholder","value","onChange","event","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa58fcd7.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst API_KEY = \"sXpGFDGZs0Dv1mmNFvYaGUvYwKX0PWIh\";\r\nconst urlEndpointRandom = `https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}&tag=`;\r\n// const urlEndpoint = \"https://api.giphy.com/v1/gifs/search?q=\"; /* PARA OBTENER SIEMPRE EL MISMO GIF */\r\n// const giphyApiKey = \"&api_key=sXpGFDGZs0Dv1mmNFvYaGUvYwKX0PWIh&limit=1\"; /* PARA OBTENER SIEMPRE EL MISMO GIF */\r\n\r\nconst CharacterList = ({ characters }) => {\r\n  const [gifUrl, setGifUrl] = useState(\"\");\r\n  const [isShown, setIsShown] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [counterClick, setCounterClick] = useState(0);\r\n  const [selectedCharacter, setSelectedCharacter] = useState({});\r\n\r\n  const handleClickCloseGif = () => {\r\n    setIsShown(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchGifRandom = async () => {\r\n      if (!selectedCharacter.name) return;\r\n      setLoading(true);\r\n      const res = await fetch(urlEndpointRandom + selectedCharacter.name);\r\n      const data = await res.json();\r\n      setGifUrl(data.data.images.original.url);\r\n      setLoading(false);\r\n      setIsShown(true);\r\n    };\r\n\r\n    fetchGifRandom();\r\n\r\n    /* PARA OBTENER SIEMPRE EL MISMO GIF */\r\n    /* const fetchSameGif = async () => {\r\n      if (!selectedCharacter.name) return;\r\n      setLoading(true);\r\n      const res = await fetch(urlEndpoint + selectedCharacter.name + giphyApiKey);\r\n      const data = await res.json();\r\n      data.data.forEach(element => {\r\n        setGifUrl(element.images.original.url);\r\n      });\r\n      setLoading(false);\r\n      setIsShown(true);\r\n    }; */\r\n\r\n    // fetchSameGif();\r\n  }, [counterClick, selectedCharacter]);\r\n\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n      <div className=\"containerTitle\">\r\n        <h3>Click on an image or character name to show a related gif from the character selected â¬‡</h3>\r\n      </div>\r\n      <div className=\"containerTitle\">\r\n        {(selectedCharacter.name && isShown) && (\r\n            <div className=\"gif\">\r\n              <h5>Click gif image to close</h5>\r\n              <p>This is a random <b>{selectedCharacter.name}</b> related gif: </p>\r\n              {!loading\r\n                ? (<img className=\"gif-container\" src={gifUrl} alt={selectedCharacter.name} onClick={handleClickCloseGif}/>)\r\n                : (<div className=\"gif-container\">\r\n                    <div className=\"loader-container spinner-border text-primary\" role=\"status\">\r\n                      <span className=\"sr-only\"></span>\r\n                    </div>\r\n                  </div>)\r\n              }\r\n            </div>\r\n          )}\r\n      </div>\r\n        <hr /> \r\n        {characters.map((character) => (\r\n          <div key={character.id} className=\"col-lg-3 col-md-6 col-sm-12 mb-4\">\r\n            <div className=\"card\" style={{ minWidth: \"200px\" }}>\r\n              <div className=\"img-container card-body\">\r\n                <img \r\n                  className=\"img-fluid character-img card-img-top\" \r\n                  src={character.image} \r\n                  alt={character.name}\r\n                  // onClick={() => setSelectedCharacter(character)}\r\n                  onClick={() => {setSelectedCharacter(character); setCounterClick(counterClick + 1);}}\r\n                />\r\n                <div className=\"overlay d-flex align-items-center justify-conten-center\"></div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <h4 \r\n                  className=\"card-title card-name\"\r\n                  // onClick={() => setSelectedCharacter(character)}\r\n                  onClick={() => {setSelectedCharacter(character); setCounterClick(counterClick + 1);}}\r\n                >\r\n                  {character.name}\r\n                </h4>\r\n                <div className=\"card-text\"> \r\n                  {(() => {\r\n                    switch (character.status) {\r\n                      case 'Alive':\r\n                        return (\r\n                          <div>ðŸŸ¢ {character.status} - {character.species}</div>\r\n                        );\r\n                      case 'Dead':\r\n                        return (\r\n                          <div>ðŸ”´ {character.status} - {character.species}</div>\r\n                        );\r\n                      case 'unknown':\r\n                        return (\r\n                          <div>ðŸ”˜ {character.status.charAt(0).toUpperCase() + character.status.slice(1)} - {character.species}</div>\r\n                        );\r\n                      default:\r\n                        break;\r\n                    }\r\n                  })()}\r\n                </div>\r\n                <hr /> {/* LINEA */}\r\n                <div className=\"card-text\"><b>Origin: </b>{character.origin.name.charAt(0).toUpperCase() + character.origin.name.slice(1)}</div>\r\n                <div className=\"card-text\"><b>Gender: </b>{character.gender}</div>\r\n                <div className=\"card-text\"><b>Last known location: </b>{character.location.name}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({ info, page, handleNextPage, handlePreviousPage }) => {\r\n  return (\r\n    <div className=\"container py-5\">\r\n        <nav>\r\n          <ul className=\"pagination justify-content-center\">\r\n            {info.prev ? (\r\n              <li className=\"page-item\">\r\n                <button className=\"page-link\" onClick={handlePreviousPage}>\r\n                  Previous\r\n                </button>\r\n              </li>\r\n            ) : null}\r\n            <li className=\"page-link\"> | {page} | </li>\r\n            {info.next ? (\r\n              <li className=\"page-item\">\r\n                <button className=\"page-link\" onClick={handleNextPage}>\r\n                  Next\r\n                </button>\r\n              </li>\r\n            ) : null}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n// components\n// import Navbar from \"./components/Navbar\";\nimport CharacterList from \"./components/CharacterList\";\nimport Pagination from \"./components/Pagination\";\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [info, setInfo] = useState({});\n  const [page, setPage] = useState(1);\n  const [query, setQuery] = useState(\"\");\n  const [error, setError] = useState(false);\n  const url = \"https://rickandmortyapi.com/api/character\";\n\n  const fetchCharacters = (url) => {\n    if (query !== \"\") {\n      axios\n        .get(`https://rickandmortyapi.com/api/character/?name=${query}`)\n        .then((data) => {\n          setCharacters(data.data.results);\n          setError(false);\n        })\n        .catch((error) => {\n          console.error(error);\n          setError(true);\n        });\n    } else {\n      axios\n        .get(url)\n        .then((data) => {\n          setCharacters(data.data.results);\n          setInfo(data.data.info);\n          setError(false);\n        })\n        .catch((error) => {\n          console.error(error);\n          setError(true);\n        });\n    }\n  };\n\n  const handleNextPage = () => {\n    setPage(page + 1);\n    fetchCharacters(info.next);\n    window.scrollTo(0, 0); // Desplaza el visor a un conjunto especÃ­fico de coodenadas en el documento.\n  };\n\n  const handlePreviousPage = () => {\n    setPage(page - 1);\n    fetchCharacters(info.prev);\n    window.scrollTo(0, 0); // Desplaza el visor a un conjunto especÃ­fico de coodenadas en el documento.\n  };\n\n  const handleCLickButtonUp = () => {\n    window.scrollTo(0, 0);\n  };\n\n  useEffect(() => {\n    fetchCharacters(url);\n  }, [query]);\n\n  return (\n    <>\n      {/* <Navbar brand=\"Rick and Morty App\" /> */}\n      <nav className=\"navbar navbar-light\">\n        <div className=\"container navbar-container\">\n          <div>\n            <img\n              className=\"navbar-img\"\n              src=\"https://www.pngkey.com/png/full/112-1128897_portal-gun-rick-and-morty-portal-gun-rick.png\"\n              alt=\"navbar-img\"\n            />\n            <a className=\"navbar-brand text-uppercase\" href=\"/\">\n              {\" \"}\n              Rick and Morty App{\" \"}\n            </a>\n          </div>\n          <div className=\"flex\">\n            <input\n              className=\"bg-gray-50 border border-gray-300 text-sm w-full indent-2 p-2.5 outline-none focus:border-blue-500 focus:ring-2 rounded-tl rounded-bl\"\n              type=\"text\"\n              placeholder=\"Search character...\"\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n            />\n          </div>\n        </div>\n      </nav>\n      <Pagination\n        info={info}\n        page={page}\n        handleNextPage={handleNextPage}\n        handlePreviousPage={handlePreviousPage}\n      ></Pagination>\n      {error ? (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"containerTitle\">\n              <h3>Aw geez... No character with that name, try another!</h3>\n            </div>\n            <img\n              className=\"imgNotFound\"\n              alt=\"Not found\"\n              src=\"https://i.pinimg.com/originals/46/82/88/46828885c28a6bfa34dd4d6bd9986c8d.png\"\n            ></img>\n          </div>\n        </div>\n      ) : (\n        <CharacterList characters={characters} />\n      )}\n\n      <div className=\"containerButtonUp\">\n        <button className=\"page-link\" onClick={handleCLickButtonUp}>\n          {\" \"}\n          ðŸ‘†{\" \"}\n        </button>\n      </div>\n      <Pagination\n        info={info}\n        page={page}\n        handleNextPage={handleNextPage}\n        handlePreviousPage={handlePreviousPage}\n      ></Pagination>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}