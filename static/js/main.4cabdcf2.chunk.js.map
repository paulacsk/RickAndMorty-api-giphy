{"version":3,"sources":["components/Navbar.js","components/CharacterList.js","components/Pagination.js","App.js","index.js"],"names":["Navbar","brand","className","src","alt","href","urlEndpointRandom","CharacterList","characters","useState","gifUrl","setGifUrl","isShown","setIsShown","loading","setLoading","selectedCharacter","setSelectedCharacter","fetchGifRandom","name","fetch","res","json","data","images","original","url","useEffect","role","onClick","map","character","index","style","minWidth","image","species","location","gender","origin","id","Pagination","info","page","handleNextPage","handlePreviousPage","prev","next","App","setCharacters","setInfo","setPage","fetchCharacters","axios","get","then","results","catch","error","console","window","scrollTo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cabdcf2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navbar = ({ brand }) => {\r\n  return (\r\n    <nav className=\"navbar-dark bg-dark\">\r\n      <div className=\"container navbar-container\">\r\n        <img className=\"navbar-img\" src=\"https://www.pngkey.com/png/full/112-1128897_portal-gun-rick-and-morty-portal-gun-rick.png\" alt=\"navbar-img\"/>\r\n        <a className=\"navbar-brand text-uppercase\" href=\"/\"> {brand} </a>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst API_KEY = \"sXpGFDGZs0Dv1mmNFvYaGUvYwKX0PWIh\";\r\nconst urlEndpoint = \"https://api.giphy.com/v1/gifs/search?q=\";\r\nconst urlEndpointRandom = `https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}&tag=`;\r\nconst giphyApiKey = \"&api_key=sXpGFDGZs0Dv1mmNFvYaGUvYwKX0PWIh&limit=1\";\r\n\r\nconst CharacterList = ({ characters }) => {\r\n  const [gifUrl, setGifUrl] = useState(\"\");\r\n  const [isShown, setIsShown] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedCharacter, setSelectedCharacter] = useState({});\r\n  \r\n\r\n  /* PARA OBTENER SIEMPRE EL MISMO GIF */\r\n  const fetchSameGif = async () => {\r\n    if (!selectedCharacter.name) return;\r\n    setLoading(true);\r\n    const res = await fetch(urlEndpoint + selectedCharacter.name + giphyApiKey);\r\n    const data = await res.json();\r\n    data.data.forEach(element => {\r\n      setGifUrl(element.images.original.url);\r\n    });\r\n    setLoading(false);\r\n    setIsShown(true);\r\n  };\r\n\r\n  const fetchGifRandom = async () => {\r\n    if (!selectedCharacter.name) return;\r\n    setLoading(true);\r\n    const res = await fetch(urlEndpointRandom + selectedCharacter.name);\r\n    const data = await res.json();\r\n    setGifUrl(data.data.images.original.url);\r\n    setLoading(false);\r\n    setIsShown(true);\r\n  };\r\n\r\n  const handleClickCloseGif = () => {\r\n    setIsShown(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchGifRandom();\r\n    // fetchSameGif();\r\n  }, [selectedCharacter]);\r\n\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n      <div className=\"containerButtonUp\">\r\n        <h3>Click on an image or character name to show a gif from the character selected â¬‡</h3>\r\n      </div>\r\n        {(selectedCharacter.name && isShown) && (\r\n            <div className=\"gif\">\r\n              <h5>Click gif image to close</h5>\r\n              <p>This is a random <b>{selectedCharacter.name}</b> related gif: </p>\r\n              {!loading\r\n                ? (<img className=\"gif-container\" src={gifUrl} alt={selectedCharacter.name} onClick={handleClickCloseGif}/>)\r\n                : (<div className=\"gif-container\">\r\n                    <div className=\"loader-container spinner-border text-primary\" role=\"status\">\r\n                      <span className=\"sr-only\"></span>\r\n                    </div>\r\n                  </div>)\r\n              }\r\n            </div>\r\n          )}\r\n        <hr /> \r\n        {characters.map((character, index) => (\r\n          <div key={character.id} className=\"col-lg-3 col-md-6 col-sm-12 mb-4\">\r\n            <div className=\"card\" style={{ minWidth: \"200px\" }}>\r\n              <div className=\"card-body\">\r\n                <img \r\n                  className=\"img-fluid character-img card-img-top\" \r\n                  src={character.image} \r\n                  alt={character.name}\r\n                  onClick={() => setSelectedCharacter(character)}\r\n                />\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <h5 \r\n                  className=\"card-title card-name\"\r\n                  onClick={() => setSelectedCharacter(character)}>\r\n                  {character.name}\r\n                </h5>\r\n                <hr />\r\n                <p className=\"card-text\">Species: {character.species}</p>\r\n                <p className=\"card-text\">Location: {character.location.name}</p>\r\n                <p className=\"card-text\">Gender: {character.gender}</p>\r\n                <p className=\"card-text\">Origin: {character.origin.name}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({ info, page, handleNextPage, handlePreviousPage }) => {\r\n  return (\r\n    <div className=\"container py-5\">\r\n        <nav>\r\n          <ul className=\"pagination justify-content-center\">\r\n            {info.prev ? (\r\n              <li className=\"page-item\">\r\n                <button className=\"page-link\" onClick={handlePreviousPage}>\r\n                  Previous\r\n                </button>\r\n              </li>\r\n            ) : null}\r\n            <li className=\"page-link\"> | {page} | </li>\r\n            {info.next ? (\r\n              <li className=\"page-item\">\r\n                <button className=\"page-link\" onClick={handleNextPage}>\r\n                  Next\r\n                </button>\r\n              </li>\r\n            ) : null}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n// components\nimport Navbar from \"./components/Navbar\";\nimport CharacterList from \"./components/CharacterList\";\nimport Pagination from \"./components/Pagination\";\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [info, setInfo] = useState({});\n  const [page, setPage] = useState(1);\n  const url = \"https://rickandmortyapi.com/api/character\";\n\n  const fetchCharacters = (url) => {\n    axios\n      .get(url)\n      .then((data) => {\n        setCharacters(data.data.results);\n        setInfo(data.data.info);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  \n  const handleNextPage = () => {\n    setPage(page + 1);\n    fetchCharacters(info.next);\n    window.scrollTo(0, 0); // Desplaza el visor a un conjunto especÃ­fico de coodenadas en el documento.\n  };\n\n  const handlePreviousPage = () => {\n    setPage(page - 1);\n    fetchCharacters(info.prev);\n    window.scrollTo(0, 0); // Desplaza el visor a un conjunto especÃ­fico de coodenadas en el documento.\n  };\n  \n  const handleCLickButtonUp = () => {\n    window.scrollTo(0, 0);\n  };\n  \n  useEffect(() => {\n    fetchCharacters(url);\n  }, []);\n\n  return (\n    <>\n      <Navbar brand=\"Rick and Morty App\" />\n      <Pagination\n        info={info} \n        page={page} \n        handleNextPage={handleNextPage}\n        handlePreviousPage={handlePreviousPage}>\n      </Pagination>\n      <CharacterList characters={characters} />\n      <div className=\"containerButtonUp \">\n        <button className=\"page-link\" onClick={handleCLickButtonUp}> ðŸ‘† </button>\n      </div>\n      <Pagination \n        info={info} \n        page={page} \n        handleNextPage={handleNextPage}\n        handlePreviousPage={handlePreviousPage}>\n      </Pagination>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}